@model MangoInventory.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", "SELECT")
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, "SubCategoryId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubCategoryId", "SELECT")
                @Html.ValidationMessageFor(model => model.SubCategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeId, "TypeId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeId", "SELECT")
                @Html.ValidationMessageFor(model => model.TypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model)
                @Html.ValidationMessageFor(model => model.Model)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand)
                @Html.ValidationMessageFor(model => model.Brand)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitId, "UnitId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UnitId", String.Empty)
                @Html.ValidationMessageFor(model => model.UnitId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.File, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.File, new { type = "file" })
                @Html.ValidationMessageFor(model => model.File)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
        <input type="hidden" id="catUrl" value="@Url.Action("GetSubCategoryByCategoryId", "SubCategory")" />
        <input type="hidden" id="subCatUrl" value="@Url.Action("GetTypesBySubCategoryId","Product")" />
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   <script src="~/Scripts/cascadeddropdown.js"></script>
<script src="~/Scripts/summernote/summernote.min.js"></script>
  <script>
    $(document).ready(function () {
        $('.note-editable').css('font-family', 'Verdana');
        $("#Description").summernote({

            //fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Verdana'],
            fontNamesIgnoreCheck: ['Verdana'],
            toolbar: [
//['style', ['style']],
['fontsize', ['fontsize']],
['font', ['bold', 'italic', 'underline', 'clear']],
 ['fontname', ['fontname']
 ],

['color', ['color']],
['para', ['ul', 'ol', 'paragraph']],
['height', ['height']],
//['insert', ['picture', 'hr']],
// ['table', ['table']]
            ],
            fontName: 'Verdana',
            height: 150,
            width: 500,
            focus: false
        });
    });
</script>

}
